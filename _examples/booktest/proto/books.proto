syntax = "proto3";

package books;

option go_package = "booktest/proto/books";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "booktest";
        version: "1.0";
        description: "Boilerplate code generated by sqlc-grpc. Modify proto/*.proto files then run 'compile.sh' script on proto directory to change the services interface.";
        contact: {
            name: "sqlc-grpc";
            url: "https://github.com/walterwanderley/sqlc-grpc";
        };
    };
};
service BooksService {
    
    rpc BooksByTags(BooksByTagsParams) returns (BooksByTagsResponse) {
        option (google.api.http) = {
            post: "/books-by-tags"
            body: "dollar_1"
            response_body: "value"
            
        };
    }
    
    rpc BooksByTitleYear(BooksByTitleYearParams) returns (BooksByTitleYearResponse) {
        option (google.api.http) = {
            get: "/books-by-title-year"
            response_body: "value"
            
        };
    }
    
    rpc CreateAuthor(CreateAuthorParams) returns (Author) {
        option (google.api.http) = {
            post: "/author"
            body: "*"
            
        };
    }
    
    rpc CreateBook(CreateBookParams) returns (Book) {
        option (google.api.http) = {
            post: "/book"
            body: "*"
            
        };
    }
    
    rpc DeleteBook(DeleteBookParams) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/book/{bookID}"
            
        };
    }
    
    rpc GetAuthor(GetAuthorParams) returns (Author) {
        option (google.api.http) = {
            get: "/author/{authorID}"
            
        };
    }
    
    rpc GetBook(GetBookParams) returns (Book) {
        option (google.api.http) = {
            get: "/book/{bookID}"
            
        };
    }
    
    rpc UpdateBook(UpdateBookParams) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/book"
            body: "*"
            
        };
    }
    
    rpc UpdateBookISBN(UpdateBookISBNParams) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/book-isbn"
            body: "*"
            
        };
    }
    
}

message BooksByTagsParams { 
    repeated string dollar_1 = 1;
}

message BooksByTagsResponse {
    repeated BooksByTagsRow value = 1;
}
message BooksByTitleYearResponse {
    repeated Book value = 1;
}
message CreateAuthorParams { 
    string name = 1;
}

message DeleteBookParams { 
    int32 bookID = 1;
}

message GetAuthorParams { 
    int32 authorID = 1;
}

message GetBookParams { 
    int32 bookID = 1;
}


message Author {
    int32 authorID = 1;
    string name = 2;
}

message Book {
    int32 bookID = 1;
    int32 authorID = 2;
    string isbn = 3;
    string bookType = 4;
    string title = 5;
    int32 year = 6;
    google.protobuf.Timestamp available = 7;
    repeated string tags = 8;
}

message BookType {
}

message BooksByTagsRow {
    int32 bookID = 1;
    string title = 2;
    google.protobuf.StringValue name = 3;
    string isbn = 4;
    repeated string tags = 5;
}

message BooksByTitleYearParams {
    string title = 1;
    int32 year = 2;
}

message CreateBookParams {
    int32 authorID = 1;
    string isbn = 2;
    string bookType = 3;
    string title = 4;
    int32 year = 5;
    google.protobuf.Timestamp available = 6;
    repeated string tags = 7;
}

message UpdateBookISBNParams {
    string title = 1;
    repeated string tags = 2;
    int32 bookID = 3;
    string isbn = 4;
}

message UpdateBookParams {
    string title = 1;
    repeated string tags = 2;
    string bookType = 3;
    int32 bookID = 4;
}

