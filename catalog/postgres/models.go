// Code generated by sqlc. DO NOT EDIT.

package postgres

import (
	"database/sql"
	"encoding/json"
	"time"
)

type Aircraft struct {
	// Aircraft code, IATA
	AircraftCode string `json:"aircraft_code"`
	// Aircraft model
	Model json.RawMessage `json:"model"`
	// Maximal flying distance, km
	Range int32 `json:"range"`
}

// Aircrafts (internal data)
type AircraftsDatum struct {
	// Aircraft code, IATA
	AircraftCode string `json:"aircraft_code"`
	// Aircraft model
	Model json.RawMessage `json:"model"`
	// Maximal flying distance, km
	Range     int32 `json:"range"`
	CompanyID int64 `json:"company_id"`
}

type AirlineCompany struct {
	CompanyID   int64  `json:"company_id"`
	CompanyName string `json:"company_name"`
	IataCode    string `json:"iata_code"`
	MainAirport string `json:"main_airport"`
}

type Airport struct {
	// Airport code
	AirportCode string `json:"airport_code"`
	// Airport name
	AirportName string `json:"airport_name"`
	// City
	City string `json:"city"`
	// Airport coordinates (longitude and latitude)
	Coordinates interface{} `json:"coordinates"`
	// Airport time zone
	Timezone string `json:"timezone"`
}

// Airports (internal data)
type AirportsDatum struct {
	// Airport code
	AirportCode string `json:"airport_code"`
	// Airport name
	AirportName string `json:"airport_name"`
	// City
	City string `json:"city"`
	// Airport coordinates (longitude and latitude)
	Coordinates interface{} `json:"coordinates"`
	// Airport time zone
	Timezone string `json:"timezone"`
}

// Boarding passes
type BoardingPass struct {
	// Ticket number
	TicketNo string `json:"ticket_no"`
	// Flight ID
	FlightID int32 `json:"flight_id"`
	// Boarding pass number
	BoardingNo int32 `json:"boarding_no"`
	// Seat number
	SeatNo string `json:"seat_no"`
}

// Bookings
type Booking struct {
	// Booking number
	BookRef string `json:"book_ref"`
	// Booking date
	BookDate time.Time `json:"book_date"`
	// Total booking cost
	TotalAmount string `json:"total_amount"`
}

type Flight struct {
	FlightID           int32        `json:"flight_id"`
	FlightNo           string       `json:"flight_no"`
	CompanyID          int64        `json:"company_id"`
	ScheduledDeparture time.Time    `json:"scheduled_departure"`
	ScheduledArrival   time.Time    `json:"scheduled_arrival"`
	DepartureAirport   string       `json:"departure_airport"`
	ArrivalAirport     string       `json:"arrival_airport"`
	Status             string       `json:"status"`
	AircraftCode       string       `json:"aircraft_code"`
	ActualDeparture    sql.NullTime `json:"actual_departure"`
	ActualArrival      sql.NullTime `json:"actual_arrival"`
}

type FlightsV struct {
	// Flight ID
	FlightID int32 `json:"flight_id"`
	// Flight number
	FlightNo  string `json:"flight_no"`
	CompanyID int64  `json:"company_id"`
	// Scheduled departure time
	ScheduledDeparture time.Time `json:"scheduled_departure"`
	// Scheduled departure time, local time at the point of departure
	ScheduledDepartureLocal interface{} `json:"scheduled_departure_local"`
	// Scheduled arrival time
	ScheduledArrival time.Time `json:"scheduled_arrival"`
	// Scheduled arrival time, local time at the point of destination
	ScheduledArrivalLocal interface{} `json:"scheduled_arrival_local"`
	// Scheduled flight duration
	ScheduledDuration int32 `json:"scheduled_duration"`
	// Deprature airport code
	DepartureAirport string `json:"departure_airport"`
	// Departure airport name
	DepartureAirportName string `json:"departure_airport_name"`
	// City of departure
	DepartureCity string `json:"departure_city"`
	// Arrival airport code
	ArrivalAirport string `json:"arrival_airport"`
	// Arrival airport name
	ArrivalAirportName string `json:"arrival_airport_name"`
	// City of arrival
	ArrivalCity string `json:"arrival_city"`
	// Flight status
	Status string `json:"status"`
	// Aircraft code, IATA
	AircraftCode string `json:"aircraft_code"`
	// Actual departure time
	ActualDeparture sql.NullTime `json:"actual_departure"`
	// Actual departure time, local time at the point of departure
	ActualDepartureLocal interface{} `json:"actual_departure_local"`
	// Actual arrival time
	ActualArrival sql.NullTime `json:"actual_arrival"`
	// Actual arrival time, local time at the point of destination
	ActualArrivalLocal interface{} `json:"actual_arrival_local"`
	// Actual flight duration
	ActualDuration int32 `json:"actual_duration"`
}

type Route struct {
	// Flight number
	FlightNo  string `json:"flight_no"`
	CompanyID int64  `json:"company_id"`
	// Code of airport of departure
	DepartureAirport string `json:"departure_airport"`
	// Name of airport of departure
	DepartureAirportName string `json:"departure_airport_name"`
	// City of departure
	DepartureCity string `json:"departure_city"`
	// Code of airport of arrival
	ArrivalAirport string `json:"arrival_airport"`
	// Name of airport of arrival
	ArrivalAirportName string `json:"arrival_airport_name"`
	// City of arrival
	ArrivalCity string `json:"arrival_city"`
	// Aircraft code, IATA
	AircraftCode string `json:"aircraft_code"`
	// Scheduled duration of flight
	Duration int32 `json:"duration"`
	// Days of week on which flights are scheduled
	DaysOfWeek interface{} `json:"days_of_week"`
}

// Seats
type Seat struct {
	// Aircraft code, IATA
	AircraftCode string `json:"aircraft_code"`
	// Seat number
	SeatNo string `json:"seat_no"`
	// Travel class
	FareConditions string `json:"fare_conditions"`
}

// Tickets
type Ticket struct {
	// Ticket number
	TicketNo string `json:"ticket_no"`
	// Booking number
	BookRef string `json:"book_ref"`
	// Passenger ID
	PassengerID string `json:"passenger_id"`
	// Passenger name
	PassengerName string `json:"passenger_name"`
	// Passenger contact information
	ContactData json.RawMessage `json:"contact_data"`
}

// Flight segment
type TicketFlight struct {
	// Ticket number
	TicketNo string `json:"ticket_no"`
	// Flight ID
	FlightID int32 `json:"flight_id"`
	// Travel class
	FareConditions string `json:"fare_conditions"`
	// Travel cost
	Amount string `json:"amount"`
}
