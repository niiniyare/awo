// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package db

import (
	"github.com/jackc/pgx/v5/pgtype"
)

// Aircrafts (internal data)
type Aircraft struct {
	ID int64 `json:"id"`
	// Aircraft code, IATA
	IataCode string `json:"iata_code"`
	// Aircraft code, ICAO
	IcaoCode string `json:"icao_code"`
	// Aircraft model
	Model string `json:"model"`
	// Maximal flying distance, km
	Range     int32              `json:"range"`
	CompanyID int64              `json:"company_id"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type Airline struct {
	ID                int64              `json:"id"`
	CompanyName       string             `json:"company_name"`
	IataCode          string             `json:"iata_code"`
	RegistaredCountry string             `json:"registared_country"`
	CreatedAt         pgtype.Timestamptz `json:"created_at"`
	UpdatedAt         pgtype.Timestamptz `json:"updated_at"`
}

type Airport struct {
	ID        int64          `json:"id"`
	IataCode  string         `json:"iata_code"`
	IcaoCode  string         `json:"icao_code"`
	Name      string         `json:"name"`
	Country   string         `json:"country"`
	State     string         `json:"state"`
	City      string         `json:"city"`
	Elevation pgtype.Text    `json:"elevation"`
	Lat       pgtype.Numeric `json:"lat"`
	Lon       pgtype.Numeric `json:"lon"`
	Timezone  string         `json:"timezone"`
}

type Flight struct {
	FlightID           int64              `json:"flight_id"`
	FlightNo           string             `json:"flight_no"`
	CompanyID          int64              `json:"company_id"`
	ScheduledDeparture pgtype.Timestamptz `json:"scheduled_departure"`
	ScheduledArrival   pgtype.Timestamptz `json:"scheduled_arrival"`
	DepartureAirport   string             `json:"departure_airport"`
	ArrivalAirport     string             `json:"arrival_airport"`
	Status             string             `json:"status"`
	AircraftID         int64              `json:"aircraft_id"`
	ActualDeparture    pgtype.Timestamptz `json:"actual_departure"`
	ActualArrival      pgtype.Timestamptz `json:"actual_arrival"`
}

// Flights (extended)
type FlightsV struct {
	// Flight ID
	FlightID int64 `json:"flight_id"`
	// Flight number
	FlightNo string `json:"flight_no"`
	// Airline company
	CompanyID int64 `json:"company_id"`
	// Scheduled departure time
	ScheduledDeparture pgtype.Timestamptz `json:"scheduled_departure"`
	// Scheduled departure time, local time at the point of departure
	ScheduledDepartureLocal pgtype.Timestamp `json:"scheduled_departure_local"`
	// Scheduled arrival time
	ScheduledArrival pgtype.Timestamptz `json:"scheduled_arrival"`
	// Scheduled arrival time, local time at the point of destination
	ScheduledArrivalLocal pgtype.Timestamp `json:"scheduled_arrival_local"`
	// Scheduled flight duration
	ScheduledDuration int32 `json:"scheduled_duration"`
	// Deprature airport code
	DepartureAirport string `json:"departure_airport"`
	// Departure airport name
	DepartureAirportName string `json:"departure_airport_name"`
	// City of departure
	DepartureCity string `json:"departure_city"`
	// Arrival airport code
	ArrivalAirport string `json:"arrival_airport"`
	// Arrival airport name
	ArrivalAirportName string `json:"arrival_airport_name"`
	// City of arrival
	ArrivalCity string `json:"arrival_city"`
	// Flight status
	Status string `json:"status"`
	// Aircraft code, IATA
	AircraftID int64 `json:"aircraft_id"`
	// Actual departure time
	ActualDeparture pgtype.Timestamptz `json:"actual_departure"`
	// Actual departure time, local time at the point of departure
	ActualDepartureLocal pgtype.Timestamp `json:"actual_departure_local"`
	// Actual arrival time
	ActualArrival pgtype.Timestamptz `json:"actual_arrival"`
	// Actual arrival time, local time at the point of destination
	ActualArrivalLocal pgtype.Timestamp `json:"actual_arrival_local"`
	// Actual flight duration
	ActualDuration int32 `json:"actual_duration"`
}

type Seat struct {
	// Aircraft code, IATA
	AircraftID int64 `json:"aircraft_id"`
	// Seat number
	SeatNo string `json:"seat_no"`
	// Travel class
	FareConditions string `json:"fare_conditions"`
}
