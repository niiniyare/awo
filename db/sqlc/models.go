// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0

package db

import (
	"time"

	"github.com/google/uuid"
)

type Account struct {
	ID        int64     `json:"id"`
	Owner     string    `json:"owner"`
	Balance   int64     `json:"balance"`
	Currency  string    `json:"currency"`
	CreatedAt time.Time `json:"created_at"`
}

type Aircraft struct {
	// Aircraft code, IATA
	AircraftCode string `json:"aircraft_code"`
	// Aircraft model
	Model string `json:"model"`
	// Maximal flying distance, km
	Range int32 `json:"range"`
}

// Aircrafts (internal data)
type AircraftsDatum struct {
	// Aircraft code, IATA
	AircraftCode string `json:"aircraft_code"`
	// Aircraft model
	Model string `json:"model"`
	// Maximal flying distance, km
	Range     int32     `json:"range"`
	CompanyID int64     `json:"company_id"`
	CreatedAt time.Time `json:"created_at"`
}

type AirlineCompany struct {
	CompanyID   int64     `json:"company_id"`
	CompanyName string    `json:"company_name"`
	IataCode    string    `json:"iata_code"`
	MainAirport string    `json:"main_airport"`
	CreatedAt   time.Time `json:"created_at"`
}

type Airport struct {
	// Airport code
	AirportCode string `json:"airport_code"`
	// Airport name
	AirportName string `json:"airport_name"`
	// Country
	Country string `json:"country"`
	// City
	City string `json:"city"`
	// Airport coordinates (longitude and latitude)
	Coordinates interface{} `json:"coordinates"`
	Timezone    string      `json:"timezone"`
	CreatedAt   time.Time   `json:"created_at"`
}

// Airports (internal data)
type AirportsDatum struct {
	// Airport code
	AirportCode string `json:"airport_code"`
	// Airport name
	AirportName string `json:"airport_name"`
	// Country
	CountryCode string `json:"country_code"`
	// City
	City string `json:"city"`
	// Airport coordinates (longitude and latitude)
	Coordinates interface{} `json:"coordinates"`
	// Airport time zone
	Timezone string `json:"timezone"`
	// time airport record Created
	CreatedAt time.Time `json:"created_at"`
}

type Entry struct {
	ID        int64 `json:"id"`
	AccountID int64 `json:"account_id"`
	// can be negative or positive
	Amount    int64     `json:"amount"`
	CreatedAt time.Time `json:"created_at"`
}

type Session struct {
	ID           uuid.UUID `json:"id"`
	Username     string    `json:"username"`
	RefreshToken string    `json:"refresh_token"`
	UserAgent    string    `json:"user_agent"`
	ClientIp     string    `json:"client_ip"`
	IsBlocked    bool      `json:"is_blocked"`
	ExpiresAt    time.Time `json:"expires_at"`
	CreatedAt    time.Time `json:"created_at"`
}

type Transfer struct {
	ID            int64 `json:"id"`
	FromAccountID int64 `json:"from_account_id"`
	ToAccountID   int64 `json:"to_account_id"`
	// must be positive
	Amount    int64     `json:"amount"`
	CreatedAt time.Time `json:"created_at"`
}

type User struct {
	Username          string    `json:"username"`
	HashedPassword    string    `json:"hashed_password"`
	FullName          string    `json:"full_name"`
	Email             string    `json:"email"`
	PasswordChangedAt time.Time `json:"password_changed_at"`
	CreatedAt         time.Time `json:"created_at"`
}
