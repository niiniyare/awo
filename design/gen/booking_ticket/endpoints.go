// Code generated by goa v3.10.2, DO NOT EDIT.
//
// booking_ticket endpoints
//
// Command:
// $ goa gen github.com/niiniyare/awo/design -o design/

package bookingticket

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "booking_ticket" service endpoints.
type Endpoints struct {
	Book goa.Endpoint
}

// NewEndpoints wraps the methods of the "booking_ticket" service with
// endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Book: NewBookEndpoint(s),
	}
}

// Use applies the given middleware to all the "booking_ticket" service
// endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Book = m(e.Book)
}

// NewBookEndpoint returns an endpoint function that calls the method "book" of
// service "booking_ticket".
func NewBookEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*BookingFlightPrams)
		return s.Book(ctx, p)
	}
}
