// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "github.com/Abdirahman0022/airline_company/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	CreateAirlineCompanyEndpoint endpoint.Endpoint
	DeleteAirlineCompanyEndpoint endpoint.Endpoint
	GetAirlineCompanyEndpoint    endpoint.Endpoint
	ListAirlineCompanyEndpoint   endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.AirlineCompanyService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		CreateAirlineCompanyEndpoint: MakeCreateAirlineCompanyEndpoint(s),
		DeleteAirlineCompanyEndpoint: MakeDeleteAirlineCompanyEndpoint(s),
		GetAirlineCompanyEndpoint:    MakeGetAirlineCompanyEndpoint(s),
		ListAirlineCompanyEndpoint:   MakeListAirlineCompanyEndpoint(s),
	}
	for _, m := range mdw["CreateAirlineCompany"] {
		eps.CreateAirlineCompanyEndpoint = m(eps.CreateAirlineCompanyEndpoint)
	}
	for _, m := range mdw["DeleteAirlineCompany"] {
		eps.DeleteAirlineCompanyEndpoint = m(eps.DeleteAirlineCompanyEndpoint)
	}
	for _, m := range mdw["GetAirlineCompany"] {
		eps.GetAirlineCompanyEndpoint = m(eps.GetAirlineCompanyEndpoint)
	}
	for _, m := range mdw["ListAirlineCompany"] {
		eps.ListAirlineCompanyEndpoint = m(eps.ListAirlineCompanyEndpoint)
	}
	return eps
}
