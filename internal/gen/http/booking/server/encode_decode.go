// Code generated by goa v3.10.2, DO NOT EDIT.
//
// booking HTTP server encoders and decoders
//
// Command:
// $ goa gen github.com/niiniyare/awo/internal/design -o internal

package server

import (
	"context"
	"io"
	"net/http"

	booking "github.com/niiniyare/awo/internal/gen/booking"
	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// EncodeBookResponse returns an encoder for responses returned by the booking
// book endpoint.
func EncodeBookResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) func(context.Context, http.ResponseWriter, interface{}) error {
	return func(ctx context.Context, w http.ResponseWriter, v interface{}) error {
		res, _ := v.(*booking.FlightBooking)
		enc := encoder(ctx, w)
		body := NewBookResponseBody(res)
		w.WriteHeader(http.StatusOK)
		return enc.Encode(body)
	}
}

// DecodeBookRequest returns a decoder for requests sent to the booking book
// endpoint.
func DecodeBookRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) func(*http.Request) (interface{}, error) {
	return func(r *http.Request) (interface{}, error) {
		var (
			body BookRequestBody
			err  error
		)
		err = decoder(r).Decode(&body)
		if err != nil {
			if err == io.EOF {
				return nil, goa.MissingPayloadError()
			}
			return nil, goa.DecodePayloadError(err.Error())
		}
		err = ValidateBookRequestBody(&body)
		if err != nil {
			return nil, err
		}
		payload := NewBookingFlightPrams(&body)

		return payload, nil
	}
}
