// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: proto/flight.proto

package flight

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateAirportListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*AirportsDatum `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *CreateAirportListResponse) Reset() {
	*x = CreateAirportListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAirportListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAirportListResponse) ProtoMessage() {}

func (x *CreateAirportListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAirportListResponse.ProtoReflect.Descriptor instead.
func (*CreateAirportListResponse) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAirportListResponse) GetValue() []*AirportsDatum {
	if x != nil {
		return x.Value
	}
	return nil
}

type DeleteAircraftParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AircraftCode string `protobuf:"bytes,1,opt,name=aircraftCode,proto3" json:"aircraftCode,omitempty"`
}

func (x *DeleteAircraftParams) Reset() {
	*x = DeleteAircraftParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAircraftParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAircraftParams) ProtoMessage() {}

func (x *DeleteAircraftParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAircraftParams.ProtoReflect.Descriptor instead.
func (*DeleteAircraftParams) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteAircraftParams) GetAircraftCode() string {
	if x != nil {
		return x.AircraftCode
	}
	return ""
}

type DeleteAirlineCompanyParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID int64 `protobuf:"varint,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
}

func (x *DeleteAirlineCompanyParams) Reset() {
	*x = DeleteAirlineCompanyParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAirlineCompanyParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAirlineCompanyParams) ProtoMessage() {}

func (x *DeleteAirlineCompanyParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAirlineCompanyParams.ProtoReflect.Descriptor instead.
func (*DeleteAirlineCompanyParams) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteAirlineCompanyParams) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

type DeleteAirportsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AirportCode string `protobuf:"bytes,1,opt,name=airportCode,proto3" json:"airportCode,omitempty"`
}

func (x *DeleteAirportsParams) Reset() {
	*x = DeleteAirportsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAirportsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAirportsParams) ProtoMessage() {}

func (x *DeleteAirportsParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAirportsParams.ProtoReflect.Descriptor instead.
func (*DeleteAirportsParams) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteAirportsParams) GetAirportCode() string {
	if x != nil {
		return x.AirportCode
	}
	return ""
}

type GetAircraftParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AircraftCode string `protobuf:"bytes,1,opt,name=aircraftCode,proto3" json:"aircraftCode,omitempty"`
}

func (x *GetAircraftParams) Reset() {
	*x = GetAircraftParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAircraftParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAircraftParams) ProtoMessage() {}

func (x *GetAircraftParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAircraftParams.ProtoReflect.Descriptor instead.
func (*GetAircraftParams) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{4}
}

func (x *GetAircraftParams) GetAircraftCode() string {
	if x != nil {
		return x.AircraftCode
	}
	return ""
}

type GetAirlineCompanyParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID int64 `protobuf:"varint,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
}

func (x *GetAirlineCompanyParams) Reset() {
	*x = GetAirlineCompanyParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAirlineCompanyParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAirlineCompanyParams) ProtoMessage() {}

func (x *GetAirlineCompanyParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAirlineCompanyParams.ProtoReflect.Descriptor instead.
func (*GetAirlineCompanyParams) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{5}
}

func (x *GetAirlineCompanyParams) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

type GetAirportsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AirportCode string `protobuf:"bytes,1,opt,name=airportCode,proto3" json:"airportCode,omitempty"`
}

func (x *GetAirportsParams) Reset() {
	*x = GetAirportsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAirportsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAirportsParams) ProtoMessage() {}

func (x *GetAirportsParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAirportsParams.ProtoReflect.Descriptor instead.
func (*GetAirportsParams) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{6}
}

func (x *GetAirportsParams) GetAirportCode() string {
	if x != nil {
		return x.AirportCode
	}
	return ""
}

type ListAircraftResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*AircraftsDatum `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *ListAircraftResponse) Reset() {
	*x = ListAircraftResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAircraftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAircraftResponse) ProtoMessage() {}

func (x *ListAircraftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAircraftResponse.ProtoReflect.Descriptor instead.
func (*ListAircraftResponse) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{7}
}

func (x *ListAircraftResponse) GetValue() []*AircraftsDatum {
	if x != nil {
		return x.Value
	}
	return nil
}

type ListAirlineCompanyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*AirlineCompany `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *ListAirlineCompanyResponse) Reset() {
	*x = ListAirlineCompanyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAirlineCompanyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAirlineCompanyResponse) ProtoMessage() {}

func (x *ListAirlineCompanyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAirlineCompanyResponse.ProtoReflect.Descriptor instead.
func (*ListAirlineCompanyResponse) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{8}
}

func (x *ListAirlineCompanyResponse) GetValue() []*AirlineCompany {
	if x != nil {
		return x.Value
	}
	return nil
}

type ListAirportsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*ListAirportsRow `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *ListAirportsResponse) Reset() {
	*x = ListAirportsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAirportsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAirportsResponse) ProtoMessage() {}

func (x *ListAirportsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAirportsResponse.ProtoReflect.Descriptor instead.
func (*ListAirportsResponse) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{9}
}

func (x *ListAirportsResponse) GetValue() []*ListAirportsRow {
	if x != nil {
		return x.Value
	}
	return nil
}

type Aircraft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AircraftCode string `protobuf:"bytes,1,opt,name=aircraftCode,proto3" json:"aircraftCode,omitempty"`
	//JSONB in postgres type
	Model string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Range int32  `protobuf:"varint,3,opt,name=range,proto3" json:"range,omitempty"`
}

func (x *Aircraft) Reset() {
	*x = Aircraft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Aircraft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aircraft) ProtoMessage() {}

func (x *Aircraft) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aircraft.ProtoReflect.Descriptor instead.
func (*Aircraft) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{10}
}

func (x *Aircraft) GetAircraftCode() string {
	if x != nil {
		return x.AircraftCode
	}
	return ""
}

func (x *Aircraft) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Aircraft) GetRange() int32 {
	if x != nil {
		return x.Range
	}
	return 0
}

type AircraftsDatum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AircraftCode string `protobuf:"bytes,1,opt,name=aircraftCode,proto3" json:"aircraftCode,omitempty"`
	//JSONB in postgres type
	Model     string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Range     int32  `protobuf:"varint,3,opt,name=range,proto3" json:"range,omitempty"`
	CompanyID int64  `protobuf:"varint,4,opt,name=companyID,proto3" json:"companyID,omitempty"`
}

func (x *AircraftsDatum) Reset() {
	*x = AircraftsDatum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AircraftsDatum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AircraftsDatum) ProtoMessage() {}

func (x *AircraftsDatum) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AircraftsDatum.ProtoReflect.Descriptor instead.
func (*AircraftsDatum) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{11}
}

func (x *AircraftsDatum) GetAircraftCode() string {
	if x != nil {
		return x.AircraftCode
	}
	return ""
}

func (x *AircraftsDatum) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *AircraftsDatum) GetRange() int32 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *AircraftsDatum) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

type AirlineCompany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID   int64  `protobuf:"varint,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	CompanyName string `protobuf:"bytes,2,opt,name=companyName,proto3" json:"companyName,omitempty"`
	IataCode    string `protobuf:"bytes,3,opt,name=iataCode,proto3" json:"iataCode,omitempty"`
	MainAirport string `protobuf:"bytes,4,opt,name=mainAirport,proto3" json:"mainAirport,omitempty"`
}

func (x *AirlineCompany) Reset() {
	*x = AirlineCompany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AirlineCompany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirlineCompany) ProtoMessage() {}

func (x *AirlineCompany) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirlineCompany.ProtoReflect.Descriptor instead.
func (*AirlineCompany) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{12}
}

func (x *AirlineCompany) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *AirlineCompany) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *AirlineCompany) GetIataCode() string {
	if x != nil {
		return x.IataCode
	}
	return ""
}

func (x *AirlineCompany) GetMainAirport() string {
	if x != nil {
		return x.MainAirport
	}
	return ""
}

type Airport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AirportCode string `protobuf:"bytes,1,opt,name=airportCode,proto3" json:"airportCode,omitempty"`
	AirportName string `protobuf:"bytes,2,opt,name=airportName,proto3" json:"airportName,omitempty"`
	City        string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Coordinates *Point `protobuf:"bytes,4,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	Timezone    string `protobuf:"bytes,5,opt,name=timezone,proto3" json:"timezone,omitempty"`
}

func (x *Airport) Reset() {
	*x = Airport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Airport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Airport) ProtoMessage() {}

func (x *Airport) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Airport.ProtoReflect.Descriptor instead.
func (*Airport) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{13}
}

func (x *Airport) GetAirportCode() string {
	if x != nil {
		return x.AirportCode
	}
	return ""
}

func (x *Airport) GetAirportName() string {
	if x != nil {
		return x.AirportName
	}
	return ""
}

func (x *Airport) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Airport) GetCoordinates() *Point {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *Airport) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type AirportsDatum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AirportCode string `protobuf:"bytes,1,opt,name=airportCode,proto3" json:"airportCode,omitempty"`
	AirportName string `protobuf:"bytes,2,opt,name=airportName,proto3" json:"airportName,omitempty"`
	City        string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Coordinates *Point `protobuf:"bytes,4,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	Timezone    string `protobuf:"bytes,5,opt,name=timezone,proto3" json:"timezone,omitempty"`
}

func (x *AirportsDatum) Reset() {
	*x = AirportsDatum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AirportsDatum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirportsDatum) ProtoMessage() {}

func (x *AirportsDatum) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirportsDatum.ProtoReflect.Descriptor instead.
func (*AirportsDatum) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{14}
}

func (x *AirportsDatum) GetAirportCode() string {
	if x != nil {
		return x.AirportCode
	}
	return ""
}

func (x *AirportsDatum) GetAirportName() string {
	if x != nil {
		return x.AirportName
	}
	return ""
}

func (x *AirportsDatum) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AirportsDatum) GetCoordinates() *Point {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *AirportsDatum) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type BoardingPass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketNo   int64  `protobuf:"varint,1,opt,name=ticketNo,proto3" json:"ticketNo,omitempty"`
	FlightID   int32  `protobuf:"varint,2,opt,name=flightID,proto3" json:"flightID,omitempty"`
	BoardingNo int32  `protobuf:"varint,3,opt,name=boardingNo,proto3" json:"boardingNo,omitempty"`
	SeatNo     string `protobuf:"bytes,4,opt,name=seatNo,proto3" json:"seatNo,omitempty"`
}

func (x *BoardingPass) Reset() {
	*x = BoardingPass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoardingPass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardingPass) ProtoMessage() {}

func (x *BoardingPass) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardingPass.ProtoReflect.Descriptor instead.
func (*BoardingPass) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{15}
}

func (x *BoardingPass) GetTicketNo() int64 {
	if x != nil {
		return x.TicketNo
	}
	return 0
}

func (x *BoardingPass) GetFlightID() int32 {
	if x != nil {
		return x.FlightID
	}
	return 0
}

func (x *BoardingPass) GetBoardingNo() int32 {
	if x != nil {
		return x.BoardingNo
	}
	return 0
}

func (x *BoardingPass) GetSeatNo() string {
	if x != nil {
		return x.SeatNo
	}
	return ""
}

type Booking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookRef     string                 `protobuf:"bytes,1,opt,name=bookRef,proto3" json:"bookRef,omitempty"`
	BookDate    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=bookDate,proto3" json:"bookDate,omitempty"`
	TotalAmount float32                `protobuf:"fixed32,3,opt,name=totalAmount,proto3" json:"totalAmount,omitempty"`
}

func (x *Booking) Reset() {
	*x = Booking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Booking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Booking) ProtoMessage() {}

func (x *Booking) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Booking.ProtoReflect.Descriptor instead.
func (*Booking) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{16}
}

func (x *Booking) GetBookRef() string {
	if x != nil {
		return x.BookRef
	}
	return ""
}

func (x *Booking) GetBookDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BookDate
	}
	return nil
}

func (x *Booking) GetTotalAmount() float32 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

type CreateAircraftParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AircraftCode string `protobuf:"bytes,1,opt,name=aircraftCode,proto3" json:"aircraftCode,omitempty"`
	//JSONB in postgres type
	Model     string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Range     int32  `protobuf:"varint,3,opt,name=range,proto3" json:"range,omitempty"`
	CompanyID int64  `protobuf:"varint,4,opt,name=companyID,proto3" json:"companyID,omitempty"`
}

func (x *CreateAircraftParams) Reset() {
	*x = CreateAircraftParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAircraftParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAircraftParams) ProtoMessage() {}

func (x *CreateAircraftParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAircraftParams.ProtoReflect.Descriptor instead.
func (*CreateAircraftParams) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{17}
}

func (x *CreateAircraftParams) GetAircraftCode() string {
	if x != nil {
		return x.AircraftCode
	}
	return ""
}

func (x *CreateAircraftParams) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CreateAircraftParams) GetRange() int32 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *CreateAircraftParams) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

type CreateAirlineCompanyParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyName string   `protobuf:"bytes,1,opt,name=companyName,proto3" json:"companyName,omitempty"`
	IataCode    string   `protobuf:"bytes,2,opt,name=iataCode,proto3" json:"iataCode,omitempty"`
	MainAirport *Airport `protobuf:"bytes,3,opt,name=mainAirport,proto3" json:"mainAirport,omitempty"`
}

func (x *CreateAirlineCompanyParams) Reset() {
	*x = CreateAirlineCompanyParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAirlineCompanyParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAirlineCompanyParams) ProtoMessage() {}

func (x *CreateAirlineCompanyParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAirlineCompanyParams.ProtoReflect.Descriptor instead.
func (*CreateAirlineCompanyParams) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{18}
}

func (x *CreateAirlineCompanyParams) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *CreateAirlineCompanyParams) GetIataCode() string {
	if x != nil {
		return x.IataCode
	}
	return ""
}

func (x *CreateAirlineCompanyParams) GetMainAirport() *Airport {
	if x != nil {
		return x.MainAirport
	}
	return nil
}

type CreateAirportListParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AirportCode string `protobuf:"bytes,1,opt,name=airportCode,proto3" json:"airportCode,omitempty"`
	AirportName string `protobuf:"bytes,2,opt,name=airportName,proto3" json:"airportName,omitempty"`
	City        string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Coordinates *Point `protobuf:"bytes,4,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
}

func (x *CreateAirportListParams) Reset() {
	*x = CreateAirportListParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAirportListParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAirportListParams) ProtoMessage() {}

func (x *CreateAirportListParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAirportListParams.ProtoReflect.Descriptor instead.
func (*CreateAirportListParams) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{19}
}

func (x *CreateAirportListParams) GetAirportCode() string {
	if x != nil {
		return x.AirportCode
	}
	return ""
}

func (x *CreateAirportListParams) GetAirportName() string {
	if x != nil {
		return x.AirportName
	}
	return ""
}

func (x *CreateAirportListParams) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CreateAirportListParams) GetCoordinates() *Point {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

// Points are represented as latitude-longitude pairs in the E7 representation
// (degrees multiplied by 10**7 and rounded to the nearest integer).
// Latitudes should be in the range +/- 90 degrees and longitude should be in
// the range +/- 180 degrees (inclusive).
type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Longitude int32 `protobuf:"varint,1,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude  int32 `protobuf:"varint,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{20}
}

func (x *Point) GetLongitude() int32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Point) GetLatitude() int32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

type CreateAirportsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AirportCode string `protobuf:"bytes,1,opt,name=airportCode,proto3" json:"airportCode,omitempty"`
	AirportName string `protobuf:"bytes,2,opt,name=airportName,proto3" json:"airportName,omitempty"`
	City        string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Coordinates *Point `protobuf:"bytes,4,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
}

func (x *CreateAirportsParams) Reset() {
	*x = CreateAirportsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAirportsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAirportsParams) ProtoMessage() {}

func (x *CreateAirportsParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAirportsParams.ProtoReflect.Descriptor instead.
func (*CreateAirportsParams) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{21}
}

func (x *CreateAirportsParams) GetAirportCode() string {
	if x != nil {
		return x.AirportCode
	}
	return ""
}

func (x *CreateAirportsParams) GetAirportName() string {
	if x != nil {
		return x.AirportName
	}
	return ""
}

func (x *CreateAirportsParams) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CreateAirportsParams) GetCoordinates() *Point {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

type FlightMSG struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightID           int32                  `protobuf:"varint,1,opt,name=flightID,proto3" json:"flightID,omitempty"`
	FlightNo           string                 `protobuf:"bytes,2,opt,name=flightNo,proto3" json:"flightNo,omitempty"`
	CompanyID          int64                  `protobuf:"varint,3,opt,name=companyID,proto3" json:"companyID,omitempty"`
	ScheduledDeparture *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=scheduledDeparture,proto3" json:"scheduledDeparture,omitempty"`
	ScheduledArrival   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=scheduledArrival,proto3" json:"scheduledArrival,omitempty"`
	DepartureAirport   string                 `protobuf:"bytes,6,opt,name=departureAirport,proto3" json:"departureAirport,omitempty"`
	ArrivalAirport     string                 `protobuf:"bytes,7,opt,name=arrivalAirport,proto3" json:"arrivalAirport,omitempty"`
	Status             string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	AircraftCode       string                 `protobuf:"bytes,9,opt,name=aircraftCode,proto3" json:"aircraftCode,omitempty"`
	ActualDeparture    *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=actualDeparture,proto3" json:"actualDeparture,omitempty"`
	ActualArrival      *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=actualArrival,proto3" json:"actualArrival,omitempty"`
}

func (x *FlightMSG) Reset() {
	*x = FlightMSG{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlightMSG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlightMSG) ProtoMessage() {}

func (x *FlightMSG) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlightMSG.ProtoReflect.Descriptor instead.
func (*FlightMSG) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{22}
}

func (x *FlightMSG) GetFlightID() int32 {
	if x != nil {
		return x.FlightID
	}
	return 0
}

func (x *FlightMSG) GetFlightNo() string {
	if x != nil {
		return x.FlightNo
	}
	return ""
}

func (x *FlightMSG) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *FlightMSG) GetScheduledDeparture() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledDeparture
	}
	return nil
}

func (x *FlightMSG) GetScheduledArrival() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledArrival
	}
	return nil
}

func (x *FlightMSG) GetDepartureAirport() string {
	if x != nil {
		return x.DepartureAirport
	}
	return ""
}

func (x *FlightMSG) GetArrivalAirport() string {
	if x != nil {
		return x.ArrivalAirport
	}
	return ""
}

func (x *FlightMSG) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FlightMSG) GetAircraftCode() string {
	if x != nil {
		return x.AircraftCode
	}
	return ""
}

func (x *FlightMSG) GetActualDeparture() *timestamppb.Timestamp {
	if x != nil {
		return x.ActualDeparture
	}
	return nil
}

func (x *FlightMSG) GetActualArrival() *timestamppb.Timestamp {
	if x != nil {
		return x.ActualArrival
	}
	return nil
}

type ListAirportsRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AirportCode string `protobuf:"bytes,1,opt,name=airportCode,proto3" json:"airportCode,omitempty"`
	AirportName string `protobuf:"bytes,2,opt,name=airportName,proto3" json:"airportName,omitempty"`
	City        string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
}

func (x *ListAirportsRow) Reset() {
	*x = ListAirportsRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAirportsRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAirportsRow) ProtoMessage() {}

func (x *ListAirportsRow) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAirportsRow.ProtoReflect.Descriptor instead.
func (*ListAirportsRow) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{23}
}

func (x *ListAirportsRow) GetAirportCode() string {
	if x != nil {
		return x.AirportCode
	}
	return ""
}

func (x *ListAirportsRow) GetAirportName() string {
	if x != nil {
		return x.AirportName
	}
	return ""
}

func (x *ListAirportsRow) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type Seat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AircraftCode   string `protobuf:"bytes,1,opt,name=aircraftCode,proto3" json:"aircraftCode,omitempty"`
	SeatNo         string `protobuf:"bytes,2,opt,name=seatNo,proto3" json:"seatNo,omitempty"`
	FareConditions string `protobuf:"bytes,3,opt,name=fareConditions,proto3" json:"fareConditions,omitempty"`
}

func (x *Seat) Reset() {
	*x = Seat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Seat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seat) ProtoMessage() {}

func (x *Seat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seat.ProtoReflect.Descriptor instead.
func (*Seat) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{24}
}

func (x *Seat) GetAircraftCode() string {
	if x != nil {
		return x.AircraftCode
	}
	return ""
}

func (x *Seat) GetSeatNo() string {
	if x != nil {
		return x.SeatNo
	}
	return ""
}

func (x *Seat) GetFareConditions() string {
	if x != nil {
		return x.FareConditions
	}
	return ""
}

type Ticket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketNo      string `protobuf:"bytes,1,opt,name=ticketNo,proto3" json:"ticketNo,omitempty"`
	BookRef       string `protobuf:"bytes,2,opt,name=bookRef,proto3" json:"bookRef,omitempty"`
	PassengerID   string `protobuf:"bytes,3,opt,name=passengerID,proto3" json:"passengerID,omitempty"`
	PassengerName string `protobuf:"bytes,4,opt,name=passengerName,proto3" json:"passengerName,omitempty"`
	//JSONB in postgres type
	ContactData string `protobuf:"bytes,5,opt,name=contactData,proto3" json:"contactData,omitempty"`
}

func (x *Ticket) Reset() {
	*x = Ticket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket) ProtoMessage() {}

func (x *Ticket) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket.ProtoReflect.Descriptor instead.
func (*Ticket) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{25}
}

func (x *Ticket) GetTicketNo() string {
	if x != nil {
		return x.TicketNo
	}
	return ""
}

func (x *Ticket) GetBookRef() string {
	if x != nil {
		return x.BookRef
	}
	return ""
}

func (x *Ticket) GetPassengerID() string {
	if x != nil {
		return x.PassengerID
	}
	return ""
}

func (x *Ticket) GetPassengerName() string {
	if x != nil {
		return x.PassengerName
	}
	return ""
}

func (x *Ticket) GetContactData() string {
	if x != nil {
		return x.ContactData
	}
	return ""
}

type TicketFlight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketNo       string  `protobuf:"bytes,1,opt,name=ticketNo,proto3" json:"ticketNo,omitempty"`
	FlightID       int32   `protobuf:"varint,2,opt,name=flightID,proto3" json:"flightID,omitempty"`
	FareConditions string  `protobuf:"bytes,3,opt,name=fareConditions,proto3" json:"fareConditions,omitempty"`
	Amount         float32 `protobuf:"fixed32,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TicketFlight) Reset() {
	*x = TicketFlight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketFlight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketFlight) ProtoMessage() {}

func (x *TicketFlight) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketFlight.ProtoReflect.Descriptor instead.
func (*TicketFlight) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{26}
}

func (x *TicketFlight) GetTicketNo() string {
	if x != nil {
		return x.TicketNo
	}
	return ""
}

func (x *TicketFlight) GetFlightID() int32 {
	if x != nil {
		return x.FlightID
	}
	return 0
}

func (x *TicketFlight) GetFareConditions() string {
	if x != nil {
		return x.FareConditions
	}
	return ""
}

func (x *TicketFlight) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

var File_proto_flight_proto protoreflect.FileDescriptor

var file_proto_flight_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a, 0x19, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e,
	0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x69,
	0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x3a, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x38, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x37, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x69, 0x72,
	0x63, 0x72, 0x61, 0x66, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x37, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x35, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41,
	0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x44, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e,
	0x41, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x73, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4a, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x69, 0x72,
	0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x41, 0x69, 0x72, 0x6c,
	0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x45, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x6f,
	0x77, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5a, 0x0a, 0x08, 0x41, 0x69, 0x72, 0x63,
	0x72, 0x61, 0x66, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x69, 0x72, 0x63,
	0x72, 0x61, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x22, 0x7e, 0x0a, 0x0e, 0x41, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74,
	0x73, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61,
	0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x69,
	0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x22, 0x8e, 0x01, 0x0a, 0x0e, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x61, 0x74, 0x61, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x61, 0x74, 0x61, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x69, 0x72, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x69,
	0x72, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x07, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x0b, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x0d, 0x41, 0x69, 0x72, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x69, 0x72, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x69,
	0x72, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x2f, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x7e, 0x0a,
	0x0c, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x73, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x22, 0x7d, 0x0a,
	0x07, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x52,
	0x65, 0x66, 0x12, 0x36, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x84, 0x01, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x69, 0x72,
	0x63, 0x72, 0x61, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x22, 0x8d, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x69,
	0x72, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x31, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x41,
	0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x69, 0x72, 0x70,
	0x6f, 0x72, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x69,
	0x72, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x66,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x22, 0x41, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x69, 0x72,
	0x70, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x0b,
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x22, 0x8d, 0x04,
	0x0a, 0x09, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x53, 0x47, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x12, 0x4a, 0x0a, 0x12, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x12, 0x46, 0x0a,
	0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x41, 0x72,
	0x72, 0x69, 0x76, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x41, 0x69, 0x72, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x72, 0x72, 0x69, 0x76,
	0x61, 0x6c, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x22, 0x69, 0x0a,
	0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x6f, 0x77,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x22, 0x6a, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x26, 0x0a, 0x0e,
	0x66, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x86, 0x01, 0x0a, 0x0c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x61, 0x72, 0x65,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x66, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xf1, 0x07, 0x0a, 0x06, 0x46, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x48, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x69, 0x72,
	0x63, 0x72, 0x61, 0x66, 0x74, 0x12, 0x1c, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x41, 0x69, 0x72,
	0x63, 0x72, 0x61, 0x66, 0x74, 0x73, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x22, 0x00, 0x12, 0x54, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x22, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e, 0x66, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x2e, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x69, 0x72,
	0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x21, 0x2e, 0x66, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x12, 0x1c, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x15,
	0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x44, 0x61, 0x74, 0x75, 0x6d, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x12, 0x1c, 0x2e, 0x66, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x54, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x69, 0x72, 0x6c, 0x69,
	0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x22, 0x2e, 0x66, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x66, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x42, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74,
	0x12, 0x19, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x69, 0x72,
	0x63, 0x72, 0x61, 0x66, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e, 0x66, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x2e, 0x41, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x73, 0x44, 0x61,
	0x74, 0x75, 0x6d, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x69, 0x72, 0x6c,
	0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1f, 0x2e, 0x66, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e, 0x66, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x2e, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x69, 0x72, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x15, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x1c, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x69,
	0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x52, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22,
	0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x69, 0x72, 0x6c,
	0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x69, 0x72, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x66,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x10, 0x5a, 0x0e,
	0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_flight_proto_rawDescOnce sync.Once
	file_proto_flight_proto_rawDescData = file_proto_flight_proto_rawDesc
)

func file_proto_flight_proto_rawDescGZIP() []byte {
	file_proto_flight_proto_rawDescOnce.Do(func() {
		file_proto_flight_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_flight_proto_rawDescData)
	})
	return file_proto_flight_proto_rawDescData
}

var file_proto_flight_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_proto_flight_proto_goTypes = []interface{}{
	(*CreateAirportListResponse)(nil),  // 0: flight.CreateAirportListResponse
	(*DeleteAircraftParams)(nil),       // 1: flight.DeleteAircraftParams
	(*DeleteAirlineCompanyParams)(nil), // 2: flight.DeleteAirlineCompanyParams
	(*DeleteAirportsParams)(nil),       // 3: flight.DeleteAirportsParams
	(*GetAircraftParams)(nil),          // 4: flight.GetAircraftParams
	(*GetAirlineCompanyParams)(nil),    // 5: flight.GetAirlineCompanyParams
	(*GetAirportsParams)(nil),          // 6: flight.GetAirportsParams
	(*ListAircraftResponse)(nil),       // 7: flight.ListAircraftResponse
	(*ListAirlineCompanyResponse)(nil), // 8: flight.ListAirlineCompanyResponse
	(*ListAirportsResponse)(nil),       // 9: flight.ListAirportsResponse
	(*Aircraft)(nil),                   // 10: flight.Aircraft
	(*AircraftsDatum)(nil),             // 11: flight.AircraftsDatum
	(*AirlineCompany)(nil),             // 12: flight.AirlineCompany
	(*Airport)(nil),                    // 13: flight.Airport
	(*AirportsDatum)(nil),              // 14: flight.AirportsDatum
	(*BoardingPass)(nil),               // 15: flight.BoardingPass
	(*Booking)(nil),                    // 16: flight.Booking
	(*CreateAircraftParams)(nil),       // 17: flight.CreateAircraftParams
	(*CreateAirlineCompanyParams)(nil), // 18: flight.CreateAirlineCompanyParams
	(*CreateAirportListParams)(nil),    // 19: flight.CreateAirportListParams
	(*Point)(nil),                      // 20: flight.Point
	(*CreateAirportsParams)(nil),       // 21: flight.CreateAirportsParams
	(*FlightMSG)(nil),                  // 22: flight.FlightMSG
	(*ListAirportsRow)(nil),            // 23: flight.ListAirportsRow
	(*Seat)(nil),                       // 24: flight.Seat
	(*Ticket)(nil),                     // 25: flight.Ticket
	(*TicketFlight)(nil),               // 26: flight.TicketFlight
	(*timestamppb.Timestamp)(nil),      // 27: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),              // 28: google.protobuf.Empty
}
var file_proto_flight_proto_depIdxs = []int32{
	14, // 0: flight.CreateAirportListResponse.value:type_name -> flight.AirportsDatum
	11, // 1: flight.ListAircraftResponse.value:type_name -> flight.AircraftsDatum
	12, // 2: flight.ListAirlineCompanyResponse.value:type_name -> flight.AirlineCompany
	23, // 3: flight.ListAirportsResponse.value:type_name -> flight.ListAirportsRow
	20, // 4: flight.Airport.coordinates:type_name -> flight.Point
	20, // 5: flight.AirportsDatum.coordinates:type_name -> flight.Point
	27, // 6: flight.Booking.bookDate:type_name -> google.protobuf.Timestamp
	13, // 7: flight.CreateAirlineCompanyParams.mainAirport:type_name -> flight.Airport
	20, // 8: flight.CreateAirportListParams.coordinates:type_name -> flight.Point
	20, // 9: flight.CreateAirportsParams.coordinates:type_name -> flight.Point
	27, // 10: flight.FlightMSG.scheduledDeparture:type_name -> google.protobuf.Timestamp
	27, // 11: flight.FlightMSG.scheduledArrival:type_name -> google.protobuf.Timestamp
	27, // 12: flight.FlightMSG.actualDeparture:type_name -> google.protobuf.Timestamp
	27, // 13: flight.FlightMSG.actualArrival:type_name -> google.protobuf.Timestamp
	17, // 14: flight.Flight.CreateAircraft:input_type -> flight.CreateAircraftParams
	18, // 15: flight.Flight.CreateAirlineCompany:input_type -> flight.CreateAirlineCompanyParams
	19, // 16: flight.Flight.CreateAirportList:input_type -> flight.CreateAirportListParams
	21, // 17: flight.Flight.CreateAirports:input_type -> flight.CreateAirportsParams
	1,  // 18: flight.Flight.DeleteAircraft:input_type -> flight.DeleteAircraftParams
	2,  // 19: flight.Flight.DeleteAirlineCompany:input_type -> flight.DeleteAirlineCompanyParams
	3,  // 20: flight.Flight.DeleteAirports:input_type -> flight.DeleteAirportsParams
	4,  // 21: flight.Flight.GetAircraft:input_type -> flight.GetAircraftParams
	5,  // 22: flight.Flight.GetAirlineCompany:input_type -> flight.GetAirlineCompanyParams
	6,  // 23: flight.Flight.GetAirports:input_type -> flight.GetAirportsParams
	28, // 24: flight.Flight.ListAircraft:input_type -> google.protobuf.Empty
	28, // 25: flight.Flight.ListAirlineCompany:input_type -> google.protobuf.Empty
	28, // 26: flight.Flight.ListAirports:input_type -> google.protobuf.Empty
	11, // 27: flight.Flight.CreateAircraft:output_type -> flight.AircraftsDatum
	12, // 28: flight.Flight.CreateAirlineCompany:output_type -> flight.AirlineCompany
	0,  // 29: flight.Flight.CreateAirportList:output_type -> flight.CreateAirportListResponse
	14, // 30: flight.Flight.CreateAirports:output_type -> flight.AirportsDatum
	28, // 31: flight.Flight.DeleteAircraft:output_type -> google.protobuf.Empty
	28, // 32: flight.Flight.DeleteAirlineCompany:output_type -> google.protobuf.Empty
	28, // 33: flight.Flight.DeleteAirports:output_type -> google.protobuf.Empty
	11, // 34: flight.Flight.GetAircraft:output_type -> flight.AircraftsDatum
	12, // 35: flight.Flight.GetAirlineCompany:output_type -> flight.AirlineCompany
	14, // 36: flight.Flight.GetAirports:output_type -> flight.AirportsDatum
	7,  // 37: flight.Flight.ListAircraft:output_type -> flight.ListAircraftResponse
	8,  // 38: flight.Flight.ListAirlineCompany:output_type -> flight.ListAirlineCompanyResponse
	9,  // 39: flight.Flight.ListAirports:output_type -> flight.ListAirportsResponse
	27, // [27:40] is the sub-list for method output_type
	14, // [14:27] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_proto_flight_proto_init() }
func file_proto_flight_proto_init() {
	if File_proto_flight_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_flight_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAirportListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAircraftParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAirlineCompanyParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAirportsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAircraftParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAirlineCompanyParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAirportsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAircraftResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAirlineCompanyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAirportsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Aircraft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AircraftsDatum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AirlineCompany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Airport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AirportsDatum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoardingPass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Booking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAircraftParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAirlineCompanyParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAirportListParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAirportsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlightMSG); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAirportsRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Seat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketFlight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_flight_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_flight_proto_goTypes,
		DependencyIndexes: file_proto_flight_proto_depIdxs,
		MessageInfos:      file_proto_flight_proto_msgTypes,
	}.Build()
	File_proto_flight_proto = out.File
	file_proto_flight_proto_rawDesc = nil
	file_proto_flight_proto_goTypes = nil
	file_proto_flight_proto_depIdxs = nil
}
